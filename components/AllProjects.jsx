const allProjects = [
  {
    id: 1,
    title: "Apple - Landing Page",
    image: require('../public/assets/projects/apple.jpg'),
    relativeUrl: "/apple",
    projectUrl: "https://apple-rep.web.app",
    sourceCode: `${process.env.NEXT_PUBLIC_GITHUB}Apple.com_Home_Page`,
    tech: ["HTML", "CSS"],
    category: "Web App",
    description: "It is a landing page of apple.com, built using HTML, CSS and is hosted on Firebase. It is a simple clone of apple.com home page created with several HTML elements and is styled using CSS external stylesheet after learning font styling, Pseudo elements/classes, CSS Box Model (i.e. margin, padding, border, content) and some display properties.",
  },

  {
    id: 2,
    title: "Pokemon",
    image: require('../public/assets/projects/pokemon.jpg'),
    relativeUrl: "/pokemon",
    projectUrl: "https://pokemon-rep.web.app/",
    sourceCode: `${process.env.NEXT_PUBLIC_GITHUB}Pokemon.com_Home_Page`,
    tech: ["HTML", "CSS"],
    category: "Web App",
    description: "This landing page of pokemon.com is built using HTML, CSS and is hosted on Firebase. It is a simple clone of pokemon.com home page created with several HTML elements and is styled using CSS external stylesheet after learning list and table properties of CSS.",
  },
  
  {
    id: 3,
    title: "Sign Up/Login UI",
    image: require('../public/assets/projects/signuplogin.jpg'),
    relativeUrl: "/signuplogin",
    projectUrl: "https://signup-and-login-forms.web.app",
    sourceCode: `${process.env.NEXT_PUBLIC_GITHUB}Login_and_Signup_Form`,
    tech: ["HTML", "CSS"],
    category: "Web App",
    description: "This app was built using HTML, CSS and is hosted on Firebase. It is a simple Signup and login UI created with several HTML elements including different HTML5 form controls with validation and is styled using CSS external style sheet. Users are able to signup using their Full Name, Email, and a Password of their choice which must be atleast 6 characters long. They can also login using Email and Password.",
  },

  {
    id: 4,
    title: "Upwork",
    image: require('../public/assets/projects/upwork.jpg'),
    relativeUrl: "/upwork",
    projectUrl: "https://upwork-rep.web.app/",
    sourceCode: `${process.env.NEXT_PUBLIC_GITHUB}Upwork.com_Home_Page`,
    tech: ["HTML", "CSS"],
    category: "Web App",
    description: "This landing page of upwork.com is built using HTML, CSS and is hosted on Firebase. It is a simple clone of upwork.com home page created with several HTML elements and is styled using CSS external stylesheet by controlling the position of elements, creating a site layout, designing for different sized screens with media query. So without using any framework it's 100% responsive.",
  },

  {
    id: 5,
    title: "DOM Manipulation",
    image: require('../public/assets/projects/dommanipulation.jpg'),
    relativeUrl: "/dommanipulation",
    projectUrl: "https://js-dom-manipulation.web.app/",
    sourceCode: `${process.env.NEXT_PUBLIC_GITHUB}DOM_Manipulation`,
    tech: ["HTML", "CSS", "JS"],
    category: "Web App",
    description: "This app was built using HTML, CSS, JavaScript and is hosted on Firebase. It is a simple and responsive DOM manipulation app created with several HTML elements, styled using CSS external stylesheet and dynamically updating content through DOM Manipulation using Vanilla JavaScript. User can change the background or text color. Show/hide and see different sizes of the image. Turn the bulb on/off etc.",
  },

  {
    id: 6,
    title: "To-do App",
    image: require('../public/assets/projects/todo1.jpg'),
    relativeUrl: "/todo1",
    projectUrl: "https://to-do-something.web.app/",
    sourceCode: `${process.env.NEXT_PUBLIC_GITHUB}To_Do_App_with_Firebase_Database`,
    tech: ["HTML", "CSS", "Bootstrap", "JS", "Firebase Database"],
    category: "Web App",
    description: "This application was built using HTML, CSS, Bootstrap 5, JavaScript, Firebase Realtime Database and is hosted on Firebase. It is a simple and responsive To-do/CRUD web app created using several HTML elements, styled using CSS external stylesheet and bootstrap 5. It's content updates dynamically through DOM Manipulation using Vanilla JavaScript. It's data is stored using Firebase Realtime Database. User can perform all the CRUD operations by adding, reading, updating or deleting their to-dos.",
  },

  {
    id: 7,
    title: "Calculator",
    image: require('../public/assets/projects/calculator.jpg'),
    relativeUrl: "/calculator",
    projectUrl: "https://a-basic-calculator.web.app/",
    sourceCode: `${process.env.NEXT_PUBLIC_GITHUB}Calculator_App`,
    tech: ["HTML", "CSS", "Bootstrap", "JS", "AOS animation"],
    category: "Web App",
    description: "This application was built using HTML, CSS, Bootstrap 4.6, JavaScript and AOS animation library as well as customized bubble animation using CSS and JS. It is hosted on Firebase. It is a basic responsive calculator web app created using several HTML elements, styled using CSS external stylesheet and bootstrap 4.6. It's content updates dynamically through DOM Manipulation using Vanilla JavaScript. User can perform all the basic operations i.e. addition, subtraction, multiplication and division.",
  },

  {
    id: 8,
    title: "Madlibs App",
    image: require('../public/assets/projects/madlibs.jpg'),
    relativeUrl: "/madlibs",
    projectUrl: "",
    sourceCode: `${process.env.NEXT_PUBLIC_GITHUB}Mad_Libs_App`,
    tech: ["HTML", "CSS", "JS"],
    category: "Web App",
    description: "This app was built using HTML, CSS, JavaScript. It isn't hosted anywhere but the source code is available on gitHub. It is a simple and responsive Madlibs web app created with several HTML elements, styled using CSS external stylesheet and it's content is updated through Vanilla JavaScript. It is a game in which a user has to fill 13 blanks and after filling all the blanks a funny story is displayed to the user.",
  },

  {
    id: 9,
    title: "Stopwatch",
    image: require('../public/assets/projects/stopwatch.jpg'),
    relativeUrl: "/stopwatch",
    projectUrl: "https://digi-stopwatch.web.app/",
    sourceCode: `${process.env.NEXT_PUBLIC_GITHUB}Stopwatch`,
    tech: ["HTML", "CSS", "Bootstrap", "JS"],
    category: "Web App",
    description: "This application was built using HTML, CSS, Bootstrap 5, JavaScript and is hosted on Firebase. It is a simple and responsive stopwatch web app created using several HTML elements, styled using CSS external stylesheet, bootstrap 5 and customized sound effects are added using JS. It's content updates dynamically through DOM Manipulation using Vanilla JavaScript. User can perform all the basic operations including start/stop the stopwatch, add laps and reset the stopwatch.",
  },

  {
    id: 10,
    title: "Quiz App",
    image: require('../public/assets/projects/quiz1.jpg'),
    relativeUrl: "/quiz",
    projectUrl: "https://a-quiz-app.web.app/",
    sourceCode: `${process.env.NEXT_PUBLIC_GITHUB}Quiz_App`,
    tech: ["HTML", "CSS", "Bootstrap", "JS", "AOS animation"],
    category: "Web App",
    description: "This application was built using HTML, CSS, Bootstrap 5, JavaScript, AOS animation library and is hosted on Firebase. It is a simple and responsive Quiz web app created using several HTML elements, styled using CSS external stylesheet and bootstrap 5. It's content updates dynamically through DOM Manipulation using Vanilla JavaScript. User can take a quiz of 7 questions after every question the correct answer is shown and after answering all the questions the result is displayed on the screen.",
  },

  {
    id: 11,
    title: "Masco",
    image: require('../public/assets/projects/masco.jpg'),
    relativeUrl: "/masco",
    projectUrl: "https://masco-786.web.app",
    sourceCode: `${process.env.NEXT_PUBLIC_GITHUB}FMP_Masco`,
    tech: ["HTML", "CSS", "Bootstrap", "JS", "AOS animation", "Slick Slider", "Typing animation"],
    category: "Web App",
    description: "The Final Module Project of Front-End development. It was a client project in which a static website was built for a client's mobile shop/business. This website was built using HTML, CSS, Bootstrap 5, JavaScript, AOS animation library, CSS Slick Slider, JS typing animation, customized footer animation and is hosted on Firebase.",
  },

  {
    id: 12,
    title: "Site Search",
    image: require('../public/assets/projects/searching.jpg'),
    relativeUrl: "/searching",
    projectUrl: "",
    sourceCode: `${process.env.NEXT_PUBLIC_GITHUB}Site_Search`,
    tech: ["HTML", "CSS", "JS"],
    category: "Web App",
    description: "This Site Search was built using HTML, CSS, ES2105 and isn't hosted anywhere but the source code is available on gitHub. In this app a Mobile's model details are displayed using ES6 Array Iteration methods. User can get the model details by selecting a mobile brand and then one of it's available models using two dropdowns.",
  },

  {
    id: 13,
    title: "React To-do App",
    image: require('../public/assets/projects/todo2.jpg'),
    relativeUrl: "/todo2",
    projectUrl: "https://should-to-do.web.app/",
    sourceCode: `${process.env.NEXT_PUBLIC_GITHUB}React_To_Do_App_with_Firebase/blob/master/firebase-to-do-app%20(using%20firebasemethods.js)`,
    tech: ["ReactJS", "React Router Dom", "Material UI", "Firebase App"],
    category: "Web App",
    description: "This application was built using React App, React Router Dom, Material UI as well as customized Input and button components, Firebase Authentication, Firebase Realtime Database and is hosted on Firebase. It is a simple and responsive To-do/CRUD web app created using several JSX elements, styled using Material UI. User is authenticated through Firebase and it's data is stored in Firebase Realtime Database. User can perform all the CRUD operations by adding, reading, updating or deleting their to-dos.",
  },

  {
    id: 14,
    title: "Site Search/Filter",
    image: require('../public/assets/projects/search-filter.jpg'),
    relativeUrl: "/searchFilter",
    projectUrl: "",
    sourceCode: `${process.env.NEXT_PUBLIC_GITHUB}React_Site_with_Searching_Filtering`,
    tech: ["ReactJS", "Material UI", "React Slick"],
    category: "Web App",
    description: "This app was built using React App, Material UI, React Slick and isn't hosted anywhere but the source code is available on gitHub. It is a simple clone of alibaba.com home page created using several JSX elements, styled using Material UI and React Slick for categories. User can filter the available products according to their categories.",
  },

  {
    id: 15,
    title: "Quiz App",
    image: require('../public/assets/projects/quiz2.jpg'),
    relativeUrl: "/quiz2",
    projectUrl: "https://a-react-quiz.web.app/",
    sourceCode: `${process.env.NEXT_PUBLIC_GITHUB}React_Quiz_App`,
    tech: ["ReactJS", "Material UI"],
    category: "Web App",
    description: "This app was built using React App, Material UI and is hosted on Firebase. It is a simple Quiz web app created using several JSX elements, styled using Material UI. User can take the quiz of 7 questions in 60 seconds after each question the score is updated if the time is up or the user has attempt all the questions the result is displayed on the screen.",
  },

  {
    id: 16,
    title: "Mc Donalds",
    image: require('../public/assets/projects/mcdonalds.jpg'),
    relativeUrl: "/mcdonalds",
    projectUrl: "https://mcdonalds-rep.web.app",
    sourceCode: `${process.env.NEXT_PUBLIC_GITHUB}Mcdonalds.com`,
    tech: ["ReactJS", "Material UI", "React Router Dom"],
    category: "Web App",
    description: "This app was built using React App, Material UI, React Router Dom and is hosted on Firebase. It is a simple clone of mcdonalds.com created using several JSX elements, styled using Material UI and routing including nested routing is added using React Router dom. User can route through the whole website as well as see the menu according to the selected category through nested routing.",
  },

  {
    id: 17,
    title: "API Integration",
    image: require('../public/assets/projects/apiintegration.jpg'),
    relativeUrl: "/apiintegration",
    projectUrl: "https://fakestore-api.web.app/",
    sourceCode: `${process.env.NEXT_PUBLIC_GITHUB}Api_Integration`,
    tech: ["ReactJS", "Material UI", "React Router Dom", "Axios"],
    category: "Web App",
    description: "This app was built using React App, Material UI, React Router Dom, Axios and is hosted on Firebase. It is a simple and responsive API integration web app created using several JSX elements, styled using Material UI, routing including nested routing is added using React Router dom and API is integrated using Fakestore API. User is presented with all the available products and can see the product details page.",
  },

  {
    id: 18,
    title: "LMS",
    image: require('../public/assets/projects/lms.jpg'),
    relativeUrl: "/lms",
    projectUrl: "https://institute-lms.web.app/",
    sourceCode: `${process.env.NEXT_PUBLIC_GITHUB}Learning_Management_System`,
    tech: ["ReactJS", "Material UI", "React Router Dom", "Firebase App"],
    category: "Web App",
    description: "This app was built using React App, Material UI, React Router Dom, Firebase Authentication & Database and is hosted on Firebase. It was created using several JSX elements, styled using Material UI and Customized Components (i.e. Drawer, Navbar, Data Table, Dropdown, Input, Button, DatePicker, Snackbar, Switch, etc.) and routing is added using React Router dom. Students can signup using student registeration form and after login students will be directed to their profile screen where all their information is displayed. Admin can see the students list, add courses and see the available courses, create and see the available quizzes, open the available result, use form control and register and see trainers using trainer registeration form etc.. \nWhile login use these admin credentials: email: admin@educators.com \npassword: lmsadmin.",
  },
  
  {
    id: 19,
    title: "Login Screens",
    image: require('../public/assets/projects/loginui.jpg'),
    relativeUrl: "/reactnativeloginscreens",
    projectUrl: "",
    sourceCode: `${process.env.NEXT_PUBLIC_GITHUB}React_Native_Login_Screens`,
    tech: ["React Native"],
    category: "Mobile App",
    description: "These 5 different Login Screens(UI) were built using React Native and styled with customized internal stylesheet.",
  },
  
  {
    id: 20,
    title: "To-do App",
    image: require('../public/assets/projects/r-n-todo2.jpg'),
    relativeUrl: "/reactnativetodo",
    projectUrl: "https://drive.google.com/file/d/1fkSS7rYKAMLfOn2wFF7_hoBfXR22WXRl/view",
    sourceCode: `${process.env.NEXT_PUBLIC_GITHUB}React_Native_To_Do_App`,
    tech: ["React Native"],
    category: "Mobile App",
    description: "This application was built in React Native. User can perform all the CRUD operations by adding, reading, updating or deleting their to-dos.",
  },

  {
    id: 21,
    title: "API Integration",
    image: require('../public/assets/projects/r-n-apiintegration.jpg'),
    relativeUrl: "/reactnativeapiintegration",
    projectUrl: "",
    sourceCode: `${process.env.NEXT_PUBLIC_GITHUB}React_Native_Api_Integration`,
    tech: ["React Native", "React Navigation", "Axios"],
    category: "Mobile App",
    description: "I built this application in React Native, React Navigation integrated with Axios by using fakestore API. User can login/signup and then they will be directed towards the home page where all items of the store are available they can select each item and see item details.",
  },

  {
    id: 22,
    title: "Maps & Geo Location",
    image: require('../public/assets/projects/r-n-maps.jpg'),
    relativeUrl: "/reactnativegeolocation",
    projectUrl: "",
    sourceCode: `${process.env.NEXT_PUBLIC_GITHUB}Geo_Location`,
    tech: ["React Native", "React Navigation", "Maps", "Geo Location", "Firebase App"],
    category: "Mobile App",
    description: "I built this application in React Native, React Navigation integrated with Firebase app, React Native Maps and Geo location. User can signup and get their current location.",
  },

  {
    id: 23,
    title: "Pizza App",
    image: require('../public/assets/projects/pizza-app.jpg'),
    relativeUrl: "/reactnativepizzaapp",
    projectUrl: "https://drive.google.com/file/d/1r2YoRqg2hQUwFSxZGsdyTdMCDz2KXm3A/view",
    sourceCode: `${process.env.NEXT_PUBLIC_GITHUB}Pizza_App`,
    tech: ["React Native", "React Navigation", "Maps", "Geo Location", "Firebase App"],
    category: "Mobile App",
    description: "This app was built by using React Native. This app features user authentication with firebase as well as the realtime database. User can login/signup through firebase and can see the menu, search through input or select from the categories being provided, after selecting an item user will be directed to the item details page and can book the order by filling the book order form. user can also track their current order. Admin can add items to the menu and see all the orders.",
  },
];


export default allProjects;